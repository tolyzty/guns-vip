<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="cn.stylefeng.guns.business.modular.mapper.TCommentMapper">
	<!-- 可根据自己的需求，是否要使用 -->
	<resultMap id="BaseResultMap" type="cn.stylefeng.guns.business.modular.entity.TComment">
        <result property="id" column="ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="userName" column="USER_NAME"/>
        <result property="articleId" column="ARTICLE_ID"/>
        <result property="articleTitle" column="ARTICLE_TITLE"/>
        <result property="parentCommentId" column="PARENT_COMMENT_ID"/>
        <result property="parentCommentUserId" column="PARENT_COMMENT_USER_ID"/>
        <result property="replyCommentId" column="REPLY_COMMENT_ID"/>
        <result property="replyCommentUserId" column="REPLY_COMMENT_USER_ID"/>
        <result property="commentLevel" column="COMMENT_LEVEL"/>
        <result property="commentType" column="COMMENT_TYPE"/>
        <result property="commentContent" column="COMMENT_CONTENT"/>
        <result property="commentStatus" column="COMMENT_STATUS"/>
        <result property="praiseNum" column="PRAISE_NUM"/>
        <result property="topStatus" column="TOP_STATUS"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="replyCommentUserName" column="REPLY_COMMENT_USER_NAME"/>
        <result property="parentCommentUserName" column="PARENT_COMMENT_USER_NAME"/>
    </resultMap>


	<sql id="Base_Column_List">
        ID AS id,
        USER_ID as userId,
        USER_NAME as userName,
        ARTICLE_ID as articleId,
        ARTICLE_TITLE as articleTitle,
        PARENT_COMMENT_ID as parentCommentId,
        PARENT_COMMENT_USER_ID as parentCommentUserId,
        REPLY_COMMENT_ID as replyCommentId,
        REPLY_COMMENT_USER_ID as replyCommentUserId,
        COMMENT_LEVEL as commentLevel,
        COMMENT_TYPE as commentType,
        COMMENT_CONTENT as commentContent,
        COMMENT_STATUS as commentStatus,
        PRAISE_NUM as praiseNum,
        TOP_STATUS as topStatus,
        CREATE_TIME as createTime,
        REPLY_COMMENT_USER_NAME as replyCommentUserName,
        PARENT_COMMENT_USER_NAME as parentCommentUserName
    </sql>


	<!--查询所有留言信息-->
	<select id="selectTComment"  resultType="map" parameterType="com.baomidou.mybatisplus.extension.plugins.pagination.Page">
		select <include refid="Base_Column_List"/> from T_COMMENT WHERE  1=1
        <if test="userName != null and userName != ''">
            and USER_NAME like CONCAT('%',#{userName},'%')
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (CREATE_TIME between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
        AND  COMMENT_LEVEL ='1'
        ORDER BY ID DESC
	</select>

    <!--查询留言下回复明细信息-->
    <select id="selectCommentInfo" resultType="map" parameterType="com.baomidou.mybatisplus.extension.plugins.pagination.Page">
         SELECT  <include refid="Base_Column_List"/>
         FROM T_COMMENT
         WHERE 1=1 AND  COMMENT_LEVEL = 2
         AND  PARENT_COMMENT_USER_ID = #{parentCommentUserId}
         AND  COMMENT_TYPE = #{commentType}
         AND COMMENT_STATUS =0
    </select>


    <!--修改留言-->
    <update id="editComment" parameterType="cn.stylefeng.guns.business.modular.entity.TComment">
        update T_COMMENT
        <set>
            <if test="userId != null">`USER_ID` = #{userId}, </if>
            <if test="userName != null">`USER_NAME` = #{userName}, </if>
            <if test="articleId != null">`ARTICLE_ID` = #{articleId}, </if>
            <if test="articleTitle != null">`ARTICLE_TITLE` = #{articleTitle}, </if>
            <if test="parentCommentId != null">`PARENT_COMMENT_ID` = #{parentCommentId}, </if>
            <if test="parentCommentUserId != null">`PARENT_COMMENT_USER_ID` = #{parentCommentUserId}, </if>
            <if test="parentCommentUserName != null">`PARENT_COMMENT_USER_NAME` = #{parentCommentUserName}, </if>
            <if test="replyCommentId != null">`REPLY_COMMENT_ID` = #{replyCommentId}, </if>
            <if test="replyCommentUserId != null">`REPLY_COMMENT_USER_ID` = #{replyCommentUserId}, </if>
            <if test="replyCommentUserName != null">`REPLY_COMMENT_USER_NAME` = #{replyCommentUserName}, </if>
            <if test="commentLevel != null">`COMMENT_LEVEL` = #{commentLevel}, </if>
            <if test="commentType != null">`COMMENT_TYPE` = #{commentType}, </if>
            <if test="commentContent != null">`COMMENT_CONTENT` = #{commentContent}, </if>
            <if test="commentStatus != null">`COMMENT_STATUS` = #{commentStatus}, </if>
            <if test="praiseNum != null">`PRAISE_NUM` = #{praiseNum}, </if>
            <if test="topStatus != null">`TOP_STATUS` = #{topStatus}, </if>
            <if test="createTime != null">`CREATE_TIME` = #{createTime}</if>
        </set>
        where ID = #{id}
    </update>

	<!--<select id="queryObject" resultType="com.suke.czx.modules.user.user.entity.TCommentEntity">
		select * from T_COMMENT where ID = #{value}
	</select>

	<select id="queryList" resultType="com.suke.czx.modules.user.user.entity.TCommentEntity">
		select * from T_COMMENT
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

 	<select id="queryTotal" resultType="int">
		select count(*) from T_COMMENT
	</select>

	<insert id="save" parameterType="com.suke.czx.modules.user.user.entity.TCommentEntity" useGeneratedKeys="true" keyProperty="id">
		insert into T_COMMENT
		(
			`USER_ID`,
			`USER_NAME`,
			`ARTICLE_ID`,
			`ARTICLE_TITLE`,
			`PARENT_COMMENT_ID`,
			`PARENT_COMMENT_USER_ID`,
			`REPLY_COMMENT_ID`,
			`REPLY_COMMENT_USER_ID`,
			`COMMENT_LEVEL`,
			`COMMENT_TYPE`,
			`COMMENT_CONTENT`,
			`COMMENT_STATUS`,
			`PRAISE_NUM`,
			`TOP_STATUS`,
			`CREATE_TIME`
		)
		values
		(
			#{userId},
			#{userName},
			#{articleId},
			#{articleTitle},
			#{parentCommentId},
			#{parentCommentUserId},
			#{replyCommentId},
			#{replyCommentUserId},
			#{commentLevel},
			#{commentType},
			#{commentContent},
			#{commentStatus},
			#{praiseNum},
			#{topStatus},
			#{createTime}
		)
	</insert>



	<delete id="delete">
		delete from T_COMMENT where ID = #{value}
	</delete>

	<delete id="deleteBatch">
		delete from T_COMMENT where ID in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>-->

</mapper>
